import { withAuth } from "next-auth/middleware";
import { getToken } from "next-auth/jwt";
import { NextRequest, NextResponse } from "next/server";

const protectedRoutes = ["/modules", "/api/auth/:path*"];
const authRoutes: Array<string> = ["/login", "/signup", "/resetpassword", "/forgetpassword", "/activate"];

export const config = {
    matcher: ["/modules", "/api/auth/:path*"]
}

export async function middleware(req: NextRequest) {
    const { pathname, origin } = req.nextUrl;

    // Retrieve the token to check if the user is authenticated
    const token = await getToken({ req, secret: process.env.NEXTAUTH_SECRET });

    // Redirect if authenticated user tries to access auth routes
    if (authRoutes.some((item) => pathname.includes(item))) {
        if (token) return NextResponse.redirect(`${origin}`);
    }

    // Redirect to login if trying to access protected routes without a token
    if (protectedRoutes.includes(pathname)) {
        if (!token) return NextResponse.redirect(`${process.env.NEXTAUTH_URL}/login`);
    }

    // Continue with the request if no redirect is needed
    return NextResponse.next();
}
